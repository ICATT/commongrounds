version: '3.4'

services:
  # demoapi:
  #   image: demoapi
  #   build:
  #     context: ../DemoApi/DemoApi
  #     dockerfile: Dockerfile
  #   environment:
  #     - ASPNETCORE_ENVIRONMENT=Development
  #     - ASPNETCORE_URLS=https://+:443;http://+:80
  #   ports:
  #     - "26324:80"
  #     - "44338:443"
  #   volumes:
  #     - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
  #     - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro

  db:
    image: postgres:12-alpine
    environment:
      - POSTGRES_DB=${DB_NAME:-openpersonen}
      - POSTGRES_USER=${DB_USER:-openpersonen}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-openpersonen}

  web:
    image: maykinmedia/open-personen
    environment:
      - DJANGO_SETTINGS_MODULE=openpersonen.conf.docker
      - SECRET_KEY=${SECRET_KEY:-%9+dfjw+zd3@q)ehsx(pdwy-ueq0zt=90gb4+&qd^6ytpj@p7#}
      - DB_NAME=${DB_NAME:-openpersonen}
      - DB_USER=${DB_USER:-openpersonen}
      - DB_PASSWORD=${DB_PASSWORD:-openpersonen}
      - OPENPERSONEN_BACKEND=${OPENPERSONEN_BACKEND:-openpersonen.contrib.demo.backend.default}
      - OPENPERSONEN_USE_AUTHENTICATION=${OPENPERSONEN_USE_AUTHENTICATION:-False}
    ports:
      - 8000:8000
    depends_on:
      - db